\name{plpoints}
\alias{plpoints}
\alias{pllines}
\alias{plbars}
\alias{plsmooth}
\alias{plsmoothline}
\alias{plrefline}
\alias{plmark}

\title{Low level plotting functions for the 'pl' system
}
\description{
  These functions do the plotting of points and enhancing lines
  based on the 'pl' paradigm
}
\usage{
plpoints(x=NULL, y=NULL, type="p", plab=NULL, pch=NULL, col=NULL, lcol=col,
  lty=NULL, lwd=NULL, psize=NULL,
  plargs = NULL, ploptions = NULL, ...)

pllines(x, y, type="l", ...)

plbars(x, y, plargs = NULL, ploptions = NULL)

plsmooth(x, y, band=NULL, power = NULL, plargs = NULL, ploptions = NULL)
plsmoothline(smoothline, x, y, plargs=NULL, ploptions = NULL, ...)

plrefline(refline, x=NULL, innerrange=NULL, y=NULL,
  cutrange = c(x = TRUE, y = FALSE), plargs=NULL, ploptions=NULL, ...)

plmark(x, y=NULL, markextremes=NULL, plabel=NULL,
  plargs=NULL, ploptions=NULL)
}
%- maybe also 'usage' for other objects documented here.
\arguments{
  \item{x}{coordinates for the horizontal axis
  }
  \item{y}{coordinates for the vertical axis
  }
  \item{plab}{labels for displaying points. Overrides labels provided by
    \code{plargs$pdata[["plab"]]}.
  }
  \item{col}{color points}
  \item{lcol}{color for lines}
  \item{type}{type of displaying points. See \code{?\link{points}}.}
  \item{pch, psize, lty, lwd}{... and \code{col} in \code{plpoints}:
    plotting character(s), size and color of plotting points,
    and line type. %% to be used for \code{plpoints}.
    Overrides other settings, defined in \code{plargs}.
  }
%%-   \item{condquant}{logical: should bars be drawn for censored data?
%%-     If \code{FALSE}, censored observations will be set to the median of
%%-     the conditional distribution and shown by a different plotting
%%-     character, see argument \code{censored} of
%%-     \code{\link{ploptions}}.
%%-     If \code{NULL}, the standard plotting character will be used.
%%-   }
  \item{smoothline}{for \code{plsmoothline}: result of a smooth fitting}
  \item{band}{logical: should a band (e.g., a confidence band)
    be drawn together with the smooth?
  }
  \item{power}{for \code{plsmooth}: smooth will be calcutated for
    \code{y^power} and the back-transformed. Usually, \code{power=0}.
  }
  \item{refline}{for \code{plrefline}:
    A vector giving intercept and slope of a straight line, 
    or a function that returns this list, such as \code{lm}}
  \item{innerrange}{for \code{plrefline}: inner range in x direction -
    only needed of the refline should be clipped at a range different
    from the \code{innerrange} attribute of the horizontal variable}
  \item{cutrange}{for \code{plrefline}: logical vector of length 2:
    should the reference line(s) be cut at the inner plotting ranges in
  x- and y-direction?
    Otherwise, it will be continued outside it with the appropriate
    transformation.
  }
  \item{markextremes}{proportion of observations that should be labeled
    because they show extreme values for a variable
  }
  \item{plabel}{point labels to be used to mark extreme points
  }
  \item{plargs, ploptions}{result of \code{\link{pl.control}}, see Details
  }
  \item{\dots}{absorbs extra arguments}
}
\value{\code{plpoints}invisibly returns the former \code{par("mar")}
  if \code{setpar} is \code{TRUE}, otherwise \code{NULL}.

  \code{plsmooth} invisibly returns the data.frame needed for
  drawing the smooth line.

  !!!
}
\details{
  \code{plargs} and \code{ploptions} may be specified explicitly,
  but they are usually generated by calling \code{pl.control}.

  For \code{plpoints}, the first arguments, \code{x} and \code{y}
  can be formulas, and an argument \code{data} can be given.
  These arguments then have the same meaning as in \code{\link{plyx}}
}
  
\author{Werner A. Stahel
}

\seealso{\link{pl.control}
}
\examples{
plyx(Sepal.Width ~ Sepal.Length, data=iris)

## again, each step separately
t.dt <- .plargs$pldata
.plargs$grid <- TRUE
plframe(t.dt$Sepal.Length, t.dt$Sepal.Width, plargs=.plargs)
plsmooth(t.dt$Sepal.Length, t.dt$Sepal.Width, plargs=.plargs)
t.plab <- plmark(t.dt$Sepal.Length, t.dt$Sepal.Width, markextremes=0.03,
                 plargs=.plargs)
plpoints(t.dt$Sepal.Length, t.dt$Sepal.Width, plargs=.plargs, plab=t.plab) 
}

\keyword{aplot}

