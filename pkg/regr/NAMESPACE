importFrom("stats",
           ## S3 Generics for which we define methods:
           add1, drop1, extractAIC, fitted, predict, residuals,
           .checkMFClasses, .getXlevels, IQR,
           add.scope, aggregate, anova, as.dist, as.formula,
           binomial, coef, coefficients, confint, contr.sum, contr.poly,
           dcauchy, delete.response, deviance, df.residual,
           dist, dlogis, dnorm, drop.scope, factor.scope,
           formula, glm.fit, hat, lm, lm.fit, loess, mad,
           mahalanobis, median, model.frame, model.matrix,
           model.offset, model.response, model.weights, model.extract, 
           na.exclude, na.omit, na.pass, napredict, naresid,
           nobs, optim, pcauchy, pchisq, pf, plogis,
           pnorm, ppoints, pt, pweibull, qchisq, qf,
           qlogis, qnorm, qqnorm, qt, quantile, rbinom,
           resid, rnorm, rpois, runif, sd, setNames,
           symnum, terms, update, update.formula, 
           var, vcov)
importFrom("utils", getS3method, recover, str)
importFrom("graphics", plot, abline, axis, box, frame, legend,
           lines, matlines, mtext, par, points, polygon,
           segments, sunflowerplot, symbols, text)
importFrom("grDevices", col2rgb, grey, palette,
           rgb)
importFrom("plgraphics", asinp, dropNA, fitted.regrpolr,
           getvariables, 
           last, leverage, linear.predictors, linpred,  
           nainf.exclude, "%nin%", plregr,
           predict.regrpolr,
           ## drevgumbel, prevgumbel, qrevgumbel, rrevgumbel, 
           residuals.polr, residuals.regrpolr,
           residuals.regrcoxph, residuals.regrsurvreg,
           showd, sumNA,
           i.def, is.formula,
           u.true, u.notfalse, u.debug, DB)

importFrom("MASS", rlm, polr)
importFrom("nnet", multinom, nnet.default) ## , VR_summ2, multinomHess (not exported!)
importFrom("survival", coxph, survreg, Surv, strata, cluster)

importFrom("robustbase", lmrob)

importFrom("quantreg", rq)

importFrom("leaps", regsubsets)

### This exports everything but  ".foobar" :
## exportPattern("^[^\\.]")

## Ok, now we are better and do not export all
export(add1.regr, ## add1.default, add1.mlm, ## see below
       ciSignif,
       compareTerms,
       contr.wsumpoly ,contr.wsum, contr.wpoly, ## condquant,
       createNAvars, 
       drop1.regr, ## drop1.default, drop1.mlm, drop1.multinom,
       drop1Wald,
       dropdata, 
       factorNA, ## fitcomp,
       fitted.regr, ## fitted.polr,
       format.modelTable,
       getUseroption,
       ## i.add1na, i.main, i.mlmsum, i.plotlws, i.termtable,
       ## if we export these, can use quote(regr0::i.<foo>) and no check--warning
       i.glm, i.lm, i.multinomial, i.polr, i.survreg,
       i.polrfit, i.multinomfit, ## i.smooth,
       ## i.findformfac,
       ## linear.predictors, linpred, 
       modelTable,
       nainf.exclude, ## "%nin%",
       plot.regrAllEqns, 
       ## predict.mlm, predict.polr,
       predict.regr,
       print.termeffects, print.modelTable, print.mregr, print.regr,
       print.regrAllEqns, 
       ## drevgumbel, prevgumbel, qrevgumbel, rrevgumbel, ## qrevgumbelexp,
       ## quantilew, quinterpol,
       regr, regr.control, regrAllEqns, regrAllEqnsXtr, 
       residuals.regr,
       ## residuals.regrpolr, residuals.regrcoxph, residuals.regrsurvreg,
       ## simresiduals, simresiduals.default, simresiduals.glm, 
       step, step.default, step.regr,
       ## subset,
       summary.regr, ## summary.mregr, 
       Surv, strata, cluster, ## need to export these since otherwise,
       ## they cannot be used in the formula of a regr call without
       ## require-ing the package survreg
       terms2order, termeffects, ## Tobit,
       useroptions, .useroptions, useroptionsDefault,
       ## vif.regr,
       ## xdistResdiff, xdistResscale,
       xNA
       )

S3method(add1, default)
S3method(add1, mlm)
S3method(add1, regr)

S3method(drop1, default)
S3method(drop1, mlm)
S3method(drop1, multinom)
S3method(drop1, regr)

S3method(summary, regr)# trivial: returns it unchanged
S3method(plot, regr)
S3method(print, regr)
S3method(print, termeffects)

S3method("[", modelTable)

